{"ast":null,"code":"var _jsxFileName = \"/Users/beatrizbarbosa/Projects/projetos-pessoais/CountriesAPI/src/pages/CountryDetails.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom'; // import './App.css';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CountryDetails extends React.Component {\n  constructor() {\n    super();\n\n    this.fetchCountries = async () => {\n      const requestReturn = await fetch('https://restcountries.eu/rest/v2/all');\n      const requestData = await requestReturn.json();\n      this.setState({\n        countries: requestData,\n        loadingC: false\n      });\n    };\n\n    this.fetchCountry = async () => {\n      const {\n        match: {\n          params: {\n            name\n          }\n        }\n      } = this.props;\n      const requestReturn = await fetch(`https://restcountries.eu/rest/v2/name/${name}`);\n      const requestData = await requestReturn.json();\n      const objectData = requestData[0];\n      this.setState({\n        country: objectData,\n        loading: false\n      });\n    };\n\n    this.handleBorderCoutries = () => {\n      const {\n        country,\n        countries,\n        loadingC\n      } = this.state;\n      const bordercoutries = country.borders;\n\n      if (loadingC === false) {\n        const arrayCountries = bordercoutries.map(border => {\n          return countries.filter(country => country.alpha3Code === border);\n        });\n        const objetoCoutries = arrayCountries.map(array => array[0]);\n        console.log(objetoCoutries);\n        return objetoCoutries;\n      } // if(bordercoutries.length > 0) {\n      //   objetoCoutries.map((country) => {\n      //     return console.log(country)\n      //     // return <Link to={ `/${country.name }` }>{ country.name } </Link>\n      //   })  \n      // }\n\n    };\n\n    this.state = {\n      country: {},\n      countries: [],\n      loading: true,\n      loadingC: true\n    };\n  }\n\n  componentDidMount() {\n    this.fetchCountry();\n    this.fetchCountries();\n  }\n\n  render() {\n    const {\n      country,\n      loading,\n      loadingC\n    } = this.state;\n    const borders = this.handleBorderCoutries();\n\n    if (loading) {\n      return /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex country-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"Coutry Flag\",\n        src: country.flag\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: country.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: `Native Name: ${country.nativeName}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: `Population: ${country.population}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: `Region: ${country.region}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: `Subregion: ${country.subregion}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: `Capital: ${country.capital}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: `Top Level Domain: ${country.topLevelDomain}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: `Currencies: ${country.currencies[0].name}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: `Languages: ${country.languages.map(item => item.name)}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Border Countries:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), borders.map(country => {\n            return console.log(country); // return <Link to={ `/${country.name }` }>{ country.name } </Link>\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            class: \"link\",\n            to: \"/\",\n            children: \"Voltar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default CountryDetails;","map":{"version":3,"sources":["/Users/beatrizbarbosa/Projects/projetos-pessoais/CountriesAPI/src/pages/CountryDetails.js"],"names":["React","Link","CountryDetails","Component","constructor","fetchCountries","requestReturn","fetch","requestData","json","setState","countries","loadingC","fetchCountry","match","params","name","props","objectData","country","loading","handleBorderCoutries","state","bordercoutries","borders","arrayCountries","map","border","filter","alpha3Code","objetoCoutries","array","console","log","componentDidMount","render","flag","nativeName","population","region","subregion","capital","topLevelDomain","currencies","languages","item"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n// import './App.css';\n\nclass CountryDetails extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      country: {},\n      countries: [],\n      loading: true,\n      loadingC: true,\n    }\n  }\n\n  fetchCountries = async () => {\n    const requestReturn = await fetch('https://restcountries.eu/rest/v2/all');\n    const requestData = await requestReturn.json();\n    this.setState({\n      countries: requestData,\n      loadingC: false,\n    })\n  }\n\n  fetchCountry = async () => {\n    const { match: { params: { name } } } = this.props;\n    const requestReturn = await fetch(`https://restcountries.eu/rest/v2/name/${name}`);\n    const requestData = await requestReturn.json();\n    const objectData = requestData[0];\n    this.setState({\n      country: objectData,\n      loading: false,\n    })\n  }\n\n  componentDidMount() {\n    this.fetchCountry();\n    this.fetchCountries();\n  }\n\n  handleBorderCoutries = () => {\n    const { country, countries, loadingC} = this.state;\n    const bordercoutries = country.borders;\n    \n    if(loadingC === false) {\n      const arrayCountries = bordercoutries.map((border) => {\n        return countries.filter((country) => country.alpha3Code === border);\n      });\n    \n      const objetoCoutries = arrayCountries.map((array) => array[0]);\n  \n      console.log(objetoCoutries)\n      return objetoCoutries;\n    }\n    \n    // if(bordercoutries.length > 0) {\n    //   objetoCoutries.map((country) => {\n    //     return console.log(country)\n    //     // return <Link to={ `/${country.name }` }>{ country.name } </Link>\n    //   })  \n    // }\n\n    \n  }\n\n\n  render() {\n    const { country, loading, loadingC } = this.state;\n\n    const borders = this.handleBorderCoutries();\n  \n    if(loading){\n      return(\n        <h2>loading</h2>\n      )\n    }\n\n    return (\n      <div className=\"flex country-page\">\n\n        <img alt=\"Coutry Flag\" src={ country.flag } />\n\n        <div className=\"content\">\n          <h2>{ country.name }</h2>\n\n          <div className=\"flex info\">\n            <div>\n              <p>{`Native Name: ${country.nativeName}`}</p>\n              <p>{`Population: ${country.population}`}</p>\n              <p>{`Region: ${country.region}`}</p>\n              <p>{`Subregion: ${country.subregion}`}</p>\n              <p>{`Capital: ${country.capital}`}</p>\n            </div>\n\n            <div>\n              <p>{`Top Level Domain: ${country.topLevelDomain}`}</p>\n              <p>{`Currencies: ${country.currencies[0].name}`}</p>\n              <p>{`Languages: ${country.languages.map((item) => item.name)}`}</p>\n            </div>\n          </div>\n          \n          <div> \n            <p>Border Countries:</p>\n            { borders.map((country) => {\n                return console.log(country)\n                  // return <Link to={ `/${country.name }` }>{ country.name } </Link>\n            })}\n          </div>\n\n          <button type=\"button\">\n            <Link class=\"link\" to=\"/\">Voltar</Link>\n          </button>\n\n        </div>\n\n      </div>\n        \n    );\n  }\n\n    \n}\n\nexport default CountryDetails;\n\n"]},"metadata":{},"sourceType":"module"}