{"ast":null,"code":"var _jsxFileName = \"/Users/beatrizbarbosa/Projects/projetos-pessoais/CountriesAPI/src/pages/CountryDetails.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom'; // import './App.css';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CountryDetails extends React.Component {\n  constructor() {\n    super();\n\n    this.fetchCountries = async () => {\n      const requestReturn = await fetch('https://restcountries.eu/rest/v2/all');\n      const requestData = await requestReturn.json();\n      this.setState({\n        countries: requestData,\n        loadingC: false\n      });\n    };\n\n    this.fetchCountry = async () => {\n      const {\n        match: {\n          params: {\n            name\n          }\n        }\n      } = this.props;\n      const requestReturn = await fetch(`https://restcountries.eu/rest/v2/name/${name}`);\n      const requestData = await requestReturn.json();\n      const objectData = requestData[0];\n      this.setState({\n        country: objectData,\n        loading: false\n      });\n    };\n\n    this.handleBorderCoutries = () => {\n      const {\n        country,\n        countries,\n        loadingC\n      } = this.state;\n      const bordercoutries = country.borders;\n\n      if (loadingC) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"none\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 14\n        }, this);\n      }\n\n      const arrayCountries = bordercoutries.map(border => {\n        return countries.filter(country => country.alpha3Code === border);\n      }); // retorna um array de arrays\n\n      const objetoCoutries = arrayCountries.map(array => array[0]);\n      console.log(objetoCoutries); // retorna um array de objetos\n\n      const linksBordes = objetoCoutries.map(country => {\n        console.log(country);\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            class: \"link\",\n            to: `/${country.name}`,\n            children: [\" \", country.name, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 14\n        }, this);\n      });\n      return linksBordes;\n    };\n\n    this.state = {\n      country: {},\n      countries: [],\n      loading: true,\n      loadingC: true\n    };\n  }\n\n  componentDidMount() {\n    this.fetchCountry();\n    this.fetchCountries();\n  }\n\n  render() {\n    const {\n      country,\n      loading\n    } = this.state;\n\n    if (loading) {\n      return /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"voltar\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          class: \"link\",\n          to: \"/\",\n          children: \"Voltar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex country-page\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"Coutry Flag\",\n          src: country.flag\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: country.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: `Native Name: ${country.nativeName}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: `Population: ${country.population}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: `Region: ${country.region}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: `Subregion: ${country.subregion}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: `Capital: ${country.capital}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: `Top Level Domain: ${country.topLevelDomain}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: `Currencies: ${country.currencies[0].name}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: `Languages: ${country.languages.map(item => item.name)}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Border Countries:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 13\n            }, this), this.handleBorderCoutries()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default CountryDetails;","map":{"version":3,"sources":["/Users/beatrizbarbosa/Projects/projetos-pessoais/CountriesAPI/src/pages/CountryDetails.js"],"names":["React","Link","CountryDetails","Component","constructor","fetchCountries","requestReturn","fetch","requestData","json","setState","countries","loadingC","fetchCountry","match","params","name","props","objectData","country","loading","handleBorderCoutries","state","bordercoutries","borders","arrayCountries","map","border","filter","alpha3Code","objetoCoutries","array","console","log","linksBordes","componentDidMount","render","flag","nativeName","population","region","subregion","capital","topLevelDomain","currencies","languages","item"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n// import './App.css';\n\nclass CountryDetails extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      country: {},\n      countries: [],\n      loading: true,\n      loadingC: true,\n    }\n  }\n\n  fetchCountries = async () => {\n    const requestReturn = await fetch('https://restcountries.eu/rest/v2/all');\n    const requestData = await requestReturn.json();\n    this.setState({\n      countries: requestData,\n      loadingC: false,\n    })\n  }\n\n  fetchCountry = async () => {\n    const { match: { params: { name } } } = this.props;\n    const requestReturn = await fetch(`https://restcountries.eu/rest/v2/name/${name}`);\n    const requestData = await requestReturn.json();\n    const objectData = requestData[0];\n    this.setState({\n      country: objectData,\n      loading: false,\n    })\n  }\n\n  componentDidMount() {\n    this.fetchCountry();\n    this.fetchCountries();\n  }\n\n  handleBorderCoutries = () => {\n    const { country, countries, loadingC} = this.state;\n    const bordercoutries = country.borders;\n\n    if(loadingC) {\n      return <div>none</div>\n    }\n\n    const arrayCountries = bordercoutries.map((border) => {\n      return countries.filter((country) => country.alpha3Code === border);\n    }); // retorna um array de arrays\n    \n    const objetoCoutries = arrayCountries.map((array) => array[0]);\n    console.log(objetoCoutries) // retorna um array de objetos\n    \n    const linksBordes = objetoCoutries.map((country) => {\n      console.log(country)\n      return <button><Link class=\"link\" to={ `/${country.name }` }> { country.name } </Link></button>\n    })  \n    \n    return linksBordes;\n\n  }\n\n\n\n  render() {\n    const { country, loading } = this.state;\n  \n    if(loading){\n      return(\n        <h2>loading</h2>\n      )\n    }\n\n    return (\n      <div>\n        <button type=\"button\" className=\"voltar\">\n          <Link class=\"link\" to=\"/\">Voltar</Link>\n        </button>\n\n        <div className=\"flex country-page\">\n\n        <img alt=\"Coutry Flag\" src={ country.flag } />   \n\n        <div className=\"content\">\n          <h2>{ country.name }</h2>\n\n          <div className=\"flex info\">\n            <div>\n              <p>{`Native Name: ${country.nativeName}`}</p>\n              <p>{`Population: ${country.population}`}</p>\n              <p>{`Region: ${country.region}`}</p>\n              <p>{`Subregion: ${country.subregion}`}</p>\n              <p>{`Capital: ${country.capital}`}</p>\n            </div>\n\n            <div>\n              <p>{`Top Level Domain: ${country.topLevelDomain}`}</p>\n              <p>{`Currencies: ${country.currencies[0].name}`}</p>\n              <p>{`Languages: ${country.languages.map((item) => item.name)}`}</p>\n            </div>\n          </div>\n          \n          <div> \n            <p>Border Countries:</p>\n            { this.handleBorderCoutries() }\n          </div>\n\n        </div>\n\n      </div>\n      </div>   \n    );\n  }\n\n    \n}\n\nexport default CountryDetails;\n\n"]},"metadata":{},"sourceType":"module"}